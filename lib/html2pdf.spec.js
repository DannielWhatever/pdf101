const html2pdf = require('./html2pdf');

// Fixture

const fixture = {
    helloWorldInPDF:
        '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Ci9DTWFwTmFtZSAvQWRvYmUtSWRlbnRpdHktVUNTIGRlZgovQ01hcFR5cGUgMiBkZWYKMSBiZWdpbmNvZGVzcGFjZXJhbmdlCjwwMDAwPiA8RkZGRj4KZW5kY29kZXNwYWNlcmFuZ2UKMiBiZWdpbmJmcmFuZ2UKPDAwMDA+IDwwMDAwPiA8MDAwMD4KPDAwMDE+IDwwMDA4PiBbPDAwNDg+IDwwMDY1PiA8MDA2Qz4gPDAwNkY+IDwwMDIwPiA8MDA1Nz4gPDAwNzI+IDwwMDY0PiBdCmVuZGJmcmFuZ2UKZW5kY21hcApDTWFwTmFtZSBjdXJyZW50ZGljdCAvQ01hcCBkZWZpbmVyZXNvdXJjZSBwb3AKZW5kCmVuZAplbmRzdHJlYW0KZW5kb2JqCjcgMCBvYmoKPDwgL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUwCi9CYXNlRm9udCAvVGltZXMtUm9tYW4KL0VuY29kaW5nIC9JZGVudGl0eS1ICi9EZXNjZW5kYW50Rm9udHMgWzE0IDAgUl0KL1RvVW5pY29kZSAxNSAwIFI+PgplbmRvYmoKMyAwIG9iago8PAovVHlwZSAvUGFnZXMKL0tpZHMgClsKNiAwIFIKXQovQ291bnQgMQovUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUNdCj4+CmVuZG9iagp4cmVmCjAgMTcKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMDA5IDAwMDAwIG4gCjAwMDAwMDAxMjAgMDAwMDAgbiAKMDAwMDAwNDA0MSAwMDAwMCBuIAowMDAwMDAwMTY5IDAwMDAwIG4gCjAwMDAwMDAyNjQgMDAwMDAgbiAKMDAwMDAwMDMwMSAwMDAwMCBuIAowMDAwMDAzOTA0IDAwMDAwIG4gCjAwMDAwMDA2MDcgMDAwMDAgbiAKMDAwMDAwMDk2MyAwMDAwMCBuIAowMDAwMDAwNDIxIDAwMDAwIG4gCjAwMDAwMDA1ODcgMDAwMDAgbiAKMDAwMDAwMDk4MiAwMDAwMCBuIAowMDAwMDAxMjIyIDAwMDAwIG4gCjAwMDAwMDMxODYgMDAwMDAgbiAKMDAwMDAwMzQzMyAwMDAwMCBuIAowMDAwMDAzMTY1IDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgMTcKL0luZm8gMSAwIFIKL1Jvb3QgMiAwIFIKPj4Kc3RhcnR4cmVmCjQxMzkKJSVFT0YK',
    anotherValue: ''
};

// Unit testing

test('should convert to pdf correctly', async () => {
    const template = '<h1>Hello World</h1>';
    const expectedOutput = fixture.helloWorldInPDF;

    const response = await html2pdf(template);
    expect(response.length).toEqual(expectedOutput.length);
});

test('should convert to pdf correctly using variables', async () => {
    const template = '<h1>Hello {{name}}</h1>';
    const vars = { name: 'World' };
    const expectedOutput = fixture.helloWorldInPDF;

    const response = await html2pdf(template, vars);
    expect(response.length).toEqual(expectedOutput.length);
});

// P.S.: x esto no programo wn, hacer pruebas es una soberana paja
